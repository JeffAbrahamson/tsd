# Source this file from your .bashrc in order to be able to call
# tsd.py as tsd and to get bash completion on series names and tsd
# subcommands.


# Completions for tsd
_tsd()
{
    local cur prev pprev opts base
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    if [ ${#COMP_WORDS[@]} -gt 2 ]; then
	pprev="${COMP_WORDS[COMP_CWORD-2]}"
    else
	pprev=
    fi
    
    if [ Xtsd = X${prev} ]; then
	completions=$(tsd.py -L)
	COMPREPLY=( $(compgen -W "$completions" -- ${cur}) )
	return 0
    fi

    if [ Xtsd = X${pprev} ]; then
	completions=$(tsd.py -C)
	COMPREPLY=( $(compgen -W "$completions" -- ${cur}) )
	return 0
    fi
    
    #COMPREPLY=( $(compgen -W "" -- ${cur}) )
    return 0
}
complete -F _tsd tsd
# I don't want to have to type the .py, but I do want python to
# compile just once (create a .pyc).
tsd() { tsd.py $*; }


# A known bug is that prev and pprev are too positional and don't take
# into account options.  So "tsd -v series <tab>" won't work properly.
# Suggestions welcome.
